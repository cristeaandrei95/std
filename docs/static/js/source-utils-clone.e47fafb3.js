(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{"./source/utils/clone.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var a=t("./node_modules/react/index.js"),r=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js");function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}function c(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,n){return!n||"object"!==l(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,n){return(u=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var i=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=s(this,p(n).call(this,e))).layout=null,t}var t,a,l;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&u(e,n)}(n,r.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;m(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"p",components:n},"Creates a clone of any given value."),r.a.createElement(o.MDXTag,{name:"p",components:n},"Supports:"),r.a.createElement(o.MDXTag,{name:"ul",components:n},r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"objects"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"dates"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"maps"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"sets"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"buffers"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"symbols"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"array buffers"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"float32 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"float64 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"int16 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"int32 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"int8 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"uint16 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"uint32 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"uint8clamped arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"uint8 arrays"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"regular expressions"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"errors"),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"primitives")),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metastring:null}},"import { clone } from \"@nore/std\";\n\nconst source = [{ a: 0 }, { b: 1 }];\nconst cloned = clone(source);\n// cloned =>  [{ 'a': 0 }, { 'b': 1 }]\n\n// array is cloned\nassert(source !== cloned); // true\n")))}}])&&c(t.prototype,a),l&&c(t,l),n}();i.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=source-utils-clone.b1b5624f2c2ade6aaaee.js.map